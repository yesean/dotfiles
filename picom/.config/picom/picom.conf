#################################
#   Transparency / Opacity      #
#################################
inactive-opacity = 0.60
active-opacity = 0.85

# Dim inactive windows. (0.0 - 1.0, defaults to 0.0)
inactive-dim = 0.25

# Specify a list of opacity rules, in the format `PERCENT:PATTERN`,
# like `50:name *= "Firefox"`. picom-trans is recommended over this.
# Note we don't make any guarantee about possible conflicts with other
# programs that set '_NET_WM_WINDOW_OPACITY' on frame or client windows.
opacity-rule = [
  "0:_NET_WM_STATE@[0]:32a *= '_NET_WM_STATE_HIDDEN'",
  "0:_NET_WM_STATE@[1]:32a *= '_NET_WM_STATE_HIDDEN'",
  "0:_NET_WM_STATE@[2]:32a *= '_NET_WM_STATE_HIDDEN'",
  "0:_NET_WM_STATE@[3]:32a *= '_NET_WM_STATE_HIDDEN'",
  "0:_NET_WM_STATE@[4]:32a *= '_NET_WM_STATE_HIDDEN'",
  "100:_NET_WM_STATE@[0]:32a = '_NET_WM_STATE_FULLSCREEN'",
  "100:_NET_WM_STATE@[1]:32a = '_NET_WM_STATE_FULLSCREEN'",
  "100:_NET_WM_STATE@[2]:32a = '_NET_WM_STATE_FULLSCREEN'",
  "100:_NET_WM_STATE@[3]:32a = '_NET_WM_STATE_FULLSCREEN'",
  "100:_NET_WM_STATE@[4]:32a = '_NET_WM_STATE_FULLSCREEN'"
]


#################################
#     Background-Blurring       #
#################################
blur:
{
  method = "dual_kawase"
  strength = 5
}


# Exclude conditions for background blur.
blur-background-exclude = [
  "window_type = 'dock'",
  "window_type = 'desktop'",
]


#################################
#             Shadows           #
#################################
shadow = true
shadow-exclude = [
  "name = 'Notification'",
  "_GTK_FRAME_EXTENTS@:c",
  "_NET_WM_STATE@:32a *= '_NET_WM_STATE_HIDDEN'",
  "_NET_WM_WINDOW_TYPE@:32a = '_NET_WM_WINDOW_TYPE_DOCK'",
  "class_g = 'albert'",
  "class_g = 'Polybar'",
  "class_g = 'i3-frame'",
]


#################################
#           Fading              #
#################################
# Fade windows in/out when opening/closing and when opacity changes,
#  unless no-fading-openclose is used.
fading = true


#################################
#       General Settings        #
#################################
# Daemonize process. Fork to background after initialization. Causes issues with certain (badly-written) drivers.
daemon = true
backend = "glx"
vsync = true
log-level = "warn"

# Try to detect windows with rounded corners and don't consider them
# shaped windows. The accuracy is not very high, unfortunately.
corner-radius = 10
detect-rounded-corners = true
rounded-corners-exclude = [
  "_NET_WM_WINDOW_TYPE@:32a = '_NET_WM_WINDOW_TYPE_DOCK'",
  "_NET_WM_STATE@:32a = '_NET_WM_STATE_FULLSCREEN'",
  "class_g = 'Polybar'",
]

# Enables the use of damage information.
# This cause the whole screen to be redrawn everytime, instead of the part of the screen
# has actually changed. Potentially degrades the performance, but might fix some artifacts.
use-damage = true

# Use X Sync fence to sync clients' draw calls, to make sure all draw
# calls are finished before picom starts drawing. Needed on nvidia-drivers
# with GLX backend for some users.
xrender-sync-fence = true
